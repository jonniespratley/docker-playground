version: '3'
services:

  # NodeJS app
  web:
    hostname: web
    build: ./web
    restart: always
    ports:
      - 9000:3001
    depends_on: 
      - db
    links:
      - db:redis
    networks:
      - webnet
      - backend
    environment: 
      - REDIS_HOST=redis
      #- REDIS_PORT=32770
      #- PORT=3000
      - FLASK_ENV=production
  # nging proxy
  proxy:
    restart: always
    build: ./nginx-example
    ports:
      - "8181:80"
    links:
      - web:web
    networks:
      - webnet

  # Redis store
  db:
    hostname: redis
    image: redis
    ports:
      - "6379"
    networks:
      - webnet

  nginx_proxy:
    build:
      context: ./nginx-example
      dockerfile: Dockerfile.proxy
    # Only test the configuration
    #command: /bin/sh -c "envsubst < /etc/nginx/nginx.tmpl > /etc/nginx/nginx.conf && cat /etc/nginx/nginx.conf"
    volumes:
      - ./nginx-example/nginx/nginx.tmpl:/etc/nginx/nginx.tmpl
    ports:
      - 80:80
    environment:
    - SERVER_NAME=test
    - LISTEN_PORT=80
    - UPSTREAM=127.0.0.1:9000
    - UPSTREAM_PROTO=http
    # Override the resolver
    - RESOLVER=127.0.0.1
    # The following would add an escape if it isn't in the Dockerfile
    - ESC=$$

networks:
  webnet:
  backend: